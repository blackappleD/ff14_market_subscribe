[{"D:\\cursor_workspace\\ff14_market_subscribe\\ff14_market_subscribe_frontend\\src\\main.ts":"1","D:\\cursor_workspace\\ff14_market_subscribe\\ff14_market_subscribe_frontend\\src\\App.vue":"2","D:\\cursor_workspace\\ff14_market_subscribe\\ff14_market_subscribe_frontend\\src\\router\\index.ts":"3","D:\\cursor_workspace\\ff14_market_subscribe\\ff14_market_subscribe_frontend\\src\\store\\index.ts":"4","D:\\cursor_workspace\\ff14_market_subscribe\\ff14_market_subscribe_frontend\\src\\views\\Login.vue":"5","D:\\cursor_workspace\\ff14_market_subscribe\\ff14_market_subscribe_frontend\\src\\views\\Register.vue":"6","D:\\cursor_workspace\\ff14_market_subscribe\\ff14_market_subscribe_frontend\\src\\views\\Subscribe.vue":"7","D:\\cursor_workspace\\ff14_market_subscribe\\ff14_market_subscribe_frontend\\src\\views\\Home.vue":"8","D:\\cursor_workspace\\ff14_market_subscribe\\ff14_market_subscribe_frontend\\src\\store\\modules\\auth.ts":"9","D:\\cursor_workspace\\ff14_market_subscribe\\ff14_market_subscribe_frontend\\src\\utils\\axios.ts":"10"},{"size":195,"mtime":1735206586520,"results":"11","hashOfConfig":"12"},{"size":552,"mtime":1735193788623,"results":"13","hashOfConfig":"12"},{"size":723,"mtime":1735206030834,"results":"14","hashOfConfig":"12"},{"size":183,"mtime":1735206584769,"results":"15","hashOfConfig":"12"},{"size":4930,"mtime":1735207062411,"results":"16","hashOfConfig":"12"},{"size":4320,"mtime":1735206122630,"results":"17","hashOfConfig":"12"},{"size":11868,"mtime":1735205731742,"results":"18","hashOfConfig":"12"},{"size":5349,"mtime":1735206483764,"results":"19","hashOfConfig":"12"},{"size":1605,"mtime":1735207062406,"results":"20","hashOfConfig":"12"},{"size":988,"mtime":1735207062406,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"wyg4u9",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\cursor_workspace\\ff14_market_subscribe\\ff14_market_subscribe_frontend\\src\\main.ts",[],[],"D:\\cursor_workspace\\ff14_market_subscribe\\ff14_market_subscribe_frontend\\src\\App.vue",[],[],"D:\\cursor_workspace\\ff14_market_subscribe\\ff14_market_subscribe_frontend\\src\\router\\index.ts",[],"D:\\cursor_workspace\\ff14_market_subscribe\\ff14_market_subscribe_frontend\\src\\store\\index.ts",[],"D:\\cursor_workspace\\ff14_market_subscribe\\ff14_market_subscribe_frontend\\src\\views\\Login.vue",[],"D:\\cursor_workspace\\ff14_market_subscribe\\ff14_market_subscribe_frontend\\src\\views\\Register.vue",[],"D:\\cursor_workspace\\ff14_market_subscribe\\ff14_market_subscribe_frontend\\src\\views\\Subscribe.vue",["45"],"<template>\r\n    <div class=\"subscribe-container\">\r\n        <div class=\"nav-bar\">\r\n            <router-link to=\"/\" class=\"nav-item\">首页</router-link>\r\n            <router-link to=\"/subscribe\" class=\"nav-item active\">物品订阅</router-link>\r\n        </div>\r\n        <div class=\"content\">\r\n            <h2 class=\"page-title\">物品订阅</h2>\r\n            <div class=\"subscription-form\">\r\n                <!-- 区服组列表 -->\r\n                <div v-for=\"(group, groupIndex) in subscriptionGroups\" :key=\"groupIndex\" class=\"group\">\r\n                    <div class=\"input-row\">\r\n                        <div class=\"server-column\">\r\n                            <input v-model=\"group.worldSearch\" class=\"input-field\" placeholder=\"请选择区服\"\r\n                                @input=\"searchWorlds(groupIndex)\" @focus=\"showWorldDropdown(groupIndex)\"\r\n                                @blur=\"hideDropdown('world', groupIndex)\">\r\n                        </div>\r\n                        <div class=\"item-column\">\r\n                            <input v-model=\"group.items[0].nameSearch\" class=\"input-field\" placeholder=\"请输入物品名称\"\r\n                                @input=\"searchItems(groupIndex, 0)\" @focus=\"showItemDropdown(groupIndex, 0)\"\r\n                                @blur=\"hideDropdown('item', groupIndex, 0)\">\r\n                            <button class=\"add-button\" @click=\"addItem(groupIndex)\">\r\n                                <span class=\"plus-icon\">+</span>\r\n                            </button>\r\n                        </div>\r\n                        <input v-model=\"group.items[0].threshold\" class=\"input-field\" type=\"number\" placeholder=\"0\">\r\n                        <button class=\"delete-button\" @click=\"deleteItem(groupIndex, 0)\">×</button>\r\n                    </div>\r\n\r\n                    <!-- 额外的物品行 -->\r\n                    <div v-for=\"(item, itemIndex) in group.items.slice(1)\" :key=\"itemIndex\" class=\"input-row\">\r\n                        <div class=\"empty-space\"></div>\r\n                        <input v-model=\"item.nameSearch\" class=\"input-field\" placeholder=\"请输入物品名称\"\r\n                            @input=\"searchItems(groupIndex, itemIndex + 1)\"\r\n                            @focus=\"showItemDropdown(groupIndex, itemIndex + 1)\"\r\n                            @blur=\"hideDropdown('item', groupIndex, itemIndex + 1)\">\r\n                        <input v-model=\"item.threshold\" class=\"input-field\" type=\"number\" placeholder=\"0\">\r\n                        <button class=\"delete-button\" @click=\"deleteItem(groupIndex, itemIndex + 1)\">×</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- 添加区服组按钮 -->\r\n                <div class=\"server-add-row\">\r\n                    <button class=\"add-button\" @click=\"addServerGroup\">\r\n                        <span class=\"plus-icon\">+</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, ref, onMounted } from 'vue';\r\nimport axios from '@/utils/axios';\r\n\r\n// 修改 debounce 函数的类型定义\r\nfunction debounce<T extends (...args: any[]) => any>(\r\n    fn: T,\r\n    delay: number\r\n): (...args: Parameters<T>) => void {\r\n    let timeoutId: number;\r\n    return (...args: Parameters<T>) => {\r\n        if (timeoutId) {\r\n            window.clearTimeout(timeoutId);\r\n        }\r\n        timeoutId = window.setTimeout(() => fn(...args), delay);\r\n    };\r\n}\r\n\r\ninterface WorldDTO {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\ninterface ItemDTO {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\ninterface UserSubscribeResDTO {\r\n    id: number;\r\n    world: WorldDTO;\r\n    item: ItemDTO;\r\n    threshold: number;\r\n}\r\n\r\ninterface Item {\r\n    id?: number;\r\n    nameSearch: string;\r\n    name?: string;\r\n    threshold: number;\r\n    showDropdown: boolean;\r\n    searchResults: any[];\r\n}\r\n\r\ninterface ServerGroup {\r\n    worldId?: number;\r\n    worldSearch: string;\r\n    world?: string;\r\n    showWorldDropdown: boolean;\r\n    worldResults: WorldDTO[];\r\n    items: Item[];\r\n}\r\n\r\nexport default defineComponent({\r\n    name: 'Subscribe',\r\n    setup() {\r\n        const subscriptionGroups = ref<ServerGroup[]>([{\r\n            worldSearch: '',\r\n            showWorldDropdown: false,\r\n            worldResults: [],\r\n            items: [{\r\n                nameSearch: '',\r\n                threshold: 0,\r\n                showDropdown: false,\r\n                searchResults: []\r\n            }]\r\n        }]);\r\n\r\n        const searchWorlds = debounce(async (groupIndex: number) => {\r\n            const search = subscriptionGroups.value[groupIndex].worldSearch;\r\n            if (!search) return;\r\n\r\n            try {\r\n                const response = await axios.get(`/ff14/world/search?name=${search}`);\r\n                subscriptionGroups.value[groupIndex].worldResults = response.data;\r\n            } catch (error) {\r\n                console.error('搜索区服失败:', error);\r\n            }\r\n        }, 300);\r\n\r\n        const searchItems = debounce(async (groupIndex: number, itemIndex: number) => {\r\n            const search = subscriptionGroups.value[groupIndex].items[itemIndex].nameSearch;\r\n            if (!search) return;\r\n\r\n            try {\r\n                const response = await axios.get(`/ff14/item/search?name=${search}`);\r\n                subscriptionGroups.value[groupIndex].items[itemIndex].searchResults = response.data;\r\n            } catch (error) {\r\n                console.error('搜索物品失败:', error);\r\n            }\r\n        }, 300);\r\n\r\n        const showWorldDropdown = (groupIndex: number) => {\r\n            subscriptionGroups.value[groupIndex].showWorldDropdown = true;\r\n        };\r\n\r\n        const showItemDropdown = (groupIndex: number, itemIndex: number) => {\r\n            subscriptionGroups.value[groupIndex].items[itemIndex].showDropdown = true;\r\n        };\r\n\r\n        const hideDropdown = (type: 'world' | 'item', groupIndex: number, itemIndex?: number) => {\r\n            setTimeout(() => {\r\n                if (type === 'world') {\r\n                    subscriptionGroups.value[groupIndex].showWorldDropdown = false;\r\n                } else if (itemIndex !== undefined) {\r\n                    subscriptionGroups.value[groupIndex].items[itemIndex].showDropdown = false;\r\n                }\r\n            }, 200);\r\n        };\r\n\r\n        const selectWorld = (groupIndex: number, world: any) => {\r\n            const group = subscriptionGroups.value[groupIndex];\r\n            group.worldId = world.id;\r\n            group.world = world.name;\r\n            group.worldSearch = world.name;\r\n            group.showWorldDropdown = false;\r\n        };\r\n\r\n        const selectItem = (groupIndex: number, itemIndex: number, item: any) => {\r\n            const itemData = subscriptionGroups.value[groupIndex].items[itemIndex];\r\n            itemData.id = item.id;\r\n            itemData.name = item.name;\r\n            itemData.nameSearch = item.name;\r\n            itemData.showDropdown = false;\r\n        };\r\n\r\n        const addServerGroup = () => {\r\n            subscriptionGroups.value.push({\r\n                worldSearch: '',\r\n                showWorldDropdown: false,\r\n                worldResults: [],\r\n                items: [{\r\n                    nameSearch: '',\r\n                    threshold: 0,\r\n                    showDropdown: false,\r\n                    searchResults: []\r\n                }]\r\n            });\r\n        };\r\n\r\n        const addItem = (groupIndex: number) => {\r\n            subscriptionGroups.value[groupIndex].items.push({\r\n                nameSearch: '',\r\n                threshold: 0,\r\n                showDropdown: false,\r\n                searchResults: []\r\n            });\r\n        };\r\n\r\n        const deleteItem = (groupIndex: number, itemIndex: number) => {\r\n            const group = subscriptionGroups.value[groupIndex];\r\n            if (group.items.length === 1) {\r\n                // 如果是组内最后一个物品，删除整个组\r\n                subscriptionGroups.value.splice(groupIndex, 1);\r\n            } else {\r\n                // 否则只删除该物品\r\n                group.items.splice(itemIndex, 1);\r\n            }\r\n        };\r\n\r\n        // 获取用户的订阅信息\r\n        const fetchSubscriptions = async () => {\r\n            try {\r\n                const response = await axios.get('/ff14/subscribe');\r\n                subscriptionGroups.value = response.data; // 假设返回的数据格式符合预期\r\n            } catch (error) {\r\n                console.error('获取订阅信息失败:', error);\r\n            }\r\n        };\r\n\r\n        // 在组件挂载时调用获取订阅信息的函数\r\n        onMounted(() => {\r\n            fetchSubscriptions();\r\n        });\r\n\r\n        return {\r\n            subscriptionGroups,\r\n            searchWorlds,\r\n            searchItems,\r\n            showWorldDropdown,\r\n            showItemDropdown,\r\n            hideDropdown,\r\n            selectWorld,\r\n            selectItem,\r\n            addServerGroup,\r\n            addItem,\r\n            deleteItem,\r\n            fetchSubscriptions\r\n        };\r\n    }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.subscribe-container {\r\n    min-height: 100vh;\r\n    background-color: #f5f5f5;\r\n}\r\n\r\n.nav-bar {\r\n    padding: 15px 0;\r\n    display: flex;\r\n    gap: 30px;\r\n    border-bottom: 1px solid #eee;\r\n    margin-left: 20px;\r\n    background-color: #fff;\r\n}\r\n\r\n.nav-item {\r\n    text-decoration: none;\r\n    color: #666;\r\n    font-size: 14px;\r\n    position: relative;\r\n}\r\n\r\n.nav-item.active {\r\n    color: #4285f4;\r\n}\r\n\r\n.nav-item.active::after {\r\n    content: '';\r\n    position: absolute;\r\n    bottom: -16px;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 2px;\r\n    background-color: #4285f4;\r\n}\r\n\r\n.content {\r\n    padding: 40px;\r\n}\r\n\r\n.page-title {\r\n    font-size: 24px;\r\n    color: #333;\r\n    margin-bottom: 30px;\r\n    font-weight: normal;\r\n    text-align: left;\r\n}\r\n\r\n.subscription-form {\r\n    position: relative;\r\n    padding: 20px 0;\r\n    background-color: #fff;\r\n    border-radius: 4px;\r\n}\r\n\r\n.group {\r\n    margin-bottom: 30px;\r\n}\r\n\r\n.input-group {\r\n    margin-bottom: 15px;\r\n}\r\n\r\n.input-row {\r\n    display: flex;\r\n    gap: 20px;\r\n    margin-bottom: 15px;\r\n    align-items: center;\r\n    padding: 0 40px;\r\n}\r\n\r\n.input-wrapper {\r\n    position: relative;\r\n}\r\n\r\n.item-wrapper {\r\n    display: flex;\r\n    gap: 15px;\r\n}\r\n\r\n/* 调整输入框宽度 */\r\n.input-field {\r\n    height: 32px;\r\n    padding: 0 12px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 4px;\r\n    font-size: 14px;\r\n    width: 200px;\r\n    background-color: #fff;\r\n}\r\n\r\n.input-wrapper .input-field {\r\n    width: 200px;\r\n}\r\n\r\n.threshold {\r\n    width: 200px;\r\n}\r\n\r\n.dropdown-menu {\r\n    position: absolute;\r\n    width: 200px;\r\n    background: white;\r\n    border: 1px solid #ddd;\r\n    border-radius: 4px;\r\n    max-height: 200px;\r\n    overflow-y: auto;\r\n    z-index: 1000;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.dropdown-item {\r\n    padding: 8px 12px;\r\n    cursor: pointer;\r\n}\r\n\r\n.dropdown-item:hover {\r\n    background-color: #f5f5f5;\r\n}\r\n\r\n.add-button {\r\n    background: none;\r\n    border: none;\r\n    padding: 0;\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.plus-icon {\r\n    width: 20px;\r\n    height: 20px;\r\n    background-color: #4285f4;\r\n    color: white;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 16px;\r\n    line-height: 1;\r\n}\r\n\r\n.add-server {\r\n    margin: 20px 0 0 40px;\r\n}\r\n\r\n.empty-field {\r\n    width: 200px;\r\n}\r\n\r\ninput:focus {\r\n    outline: none;\r\n    border-color: #4285f4;\r\n}\r\n\r\n/* 移除number输入框的箭头 */\r\ninput[type=\"number\"]::-webkit-inner-spin-button,\r\ninput[type=\"number\"]::-webkit-outer-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n}\r\n</style>","D:\\cursor_workspace\\ff14_market_subscribe\\ff14_market_subscribe_frontend\\src\\views\\Home.vue",[],"D:\\cursor_workspace\\ff14_market_subscribe\\ff14_market_subscribe_frontend\\src\\store\\modules\\auth.ts",[],"D:\\cursor_workspace\\ff14_market_subscribe\\ff14_market_subscribe_frontend\\src\\utils\\axios.ts",[],{"ruleId":"46","severity":1,"message":"47","line":81,"column":11,"nodeType":"48","messageId":"49","endLine":81,"endColumn":30},"@typescript-eslint/no-unused-vars","'UserSubscribeResDTO' is defined but never used.","Identifier","unusedVar"]